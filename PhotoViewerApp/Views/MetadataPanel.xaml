<UserControl
    x:Class="PhotoViewerApp.Views.MetadataPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoViewerApp.Views"   
    xmlns:viewModels="using:PhotoViewerCore.ViewModels"
    xmlns:converters="using:PhotoViewerApp.Converters"
    xmlns:utils="using:PhotoViewerApp.Utils"
    xmlns:res="using:PhotoViewerApp.Resources"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Width="300"
    Visibility="{x:Bind ViewModel.IsVisible, Mode=OneWay}">

    <UserControl.Resources>
        <converters:BoolToObjectConverter x:Key="PlaceholderConverter" TrueValue="Multiple values" FalseValue=""/>
        
        <Style x:Key="HeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="Margin"  Value="0,16,0,4" />
        </Style>
        
        <Style x:Key="ItemWithCountListView" TargetType="ListView">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectionMode" Value="None"/>
            <Setter Property="MaxHeight"  Value="300"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate x:DataType="viewModels:ItemWithCountModel">
                        <RelativePanel>
                            <TextBlock RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="count" Text="{x:Bind Value}"/>
                            <TextBlock Margin="4,0,0,0" x:Name="count" RelativePanel.AlignRightWithPanel="True" Text="{x:Bind Count}"/>
                        </RelativePanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <RelativePanel Padding="16,16,8,16">
            <TextBlock
                Style="{StaticResource TitleTextBlockStyle}"
                RelativePanel.AlignVerticalCenterWithPanel="True"
                Text="{x:Bind res:Strings.MetadataPanel_Title}" />
            <Button             
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignVerticalCenterWithPanel="True"
                Padding="4"
                Command="{x:Bind ViewModel.CloseCommand}"  
                ToolTipService.ToolTip="{x:Bind res:Strings.MetadataPanel_CloseButtonToolTip}">
                <SymbolIcon Symbol="ClosePane" />
            </Button>
        </RelativePanel>

        <ScrollViewer Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Auto">

            <StackPanel VerticalAlignment="Top" Padding="16,0,16,16">

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_TitleHeader}" Style="{StaticResource HeaderStyle}"/>
                <TextBox 
                    IsEnabled="{x:Bind ViewModel.IsEnabled, Mode=OneWay}" 
                    Text="{x:Bind ViewModel.TitleTextboxModel.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="{x:Bind ViewModel.TitleTextboxModel.HasMultipleValues, Mode=OneWay, Converter={StaticResource PlaceholderConverter}}"
                    utils:EnterKeyExtension.Command="{x:Bind ViewModel.TitleTextboxModel.SignalTypingCompletedCommand}"/>
                <ProgressBar IsIndeterminate="{x:Bind ViewModel.TitleTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_LocationHeader}" Style="{StaticResource HeaderStyle}"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_PeopleHeader}" Style="{StaticResource HeaderStyle}"/>
                <ToggleButton 
                    Content="Personen auf Foto markieren"
                    Visibility="{x:Bind ViewModel.IsTagPeopleOnPhotoButtonVisible}"
                    Command="{x:Bind ViewModel.ToggleTagPeopleOnPhotoCommand}"                       
                    IsChecked="{x:Bind ViewModel.IsTagPeopleOnPhotoButtonChecked, Mode=OneWay}"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_KeywordsHeader}" Style="{StaticResource HeaderStyle}"/>
                <ListView 
                    ItemsSource="{x:Bind ViewModel.KeywordsSectionModel.Keywords, Mode=OneWay}" 
                    Style="{StaticResource ItemWithCountListView}"/>
                <RelativePanel Margin="0,4,0,0">
                    <AutoSuggestBox       
                        IsEnabled="{x:Bind ViewModel.IsEnabled, Mode=OneWay}"
                        Text="{x:Bind ViewModel.KeywordsSectionModel.AutoSuggestBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{x:Bind ViewModel.KeywordsSectionModel.Suggestions, Mode=OneWay}"
                        PlaceholderText="{x:Bind res:Strings.MetadataPanel_PeoplePlaceholder}"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.LeftOf="addKeywordButton"                                   
                        utils:EnterKeyExtension.Command="{x:Bind ViewModel.KeywordsSectionModel.AddKeywordCommand}">
                    </AutoSuggestBox>
                    <Button
                        x:Name="addKeywordButton"
                        Width="32" Height="32" Padding="0"
                        Command="{x:Bind ViewModel.KeywordsSectionModel.AddKeywordCommand}"
                        RelativePanel.AlignRightWithPanel="True">
                        <SymbolIcon Symbol="Add" />
                    </Button>
                    <ProgressRing
                        Width="32" Height="32"
                        RelativePanel.AlignRightWithPanel="True"
                        IsActive="{x:Bind ViewModel.KeywordsSectionModel.AddKeywordCommand.IsRunning, Mode=OneWay}" />
                </RelativePanel>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_RatingHeader}" Style="{StaticResource HeaderStyle}"/>
                <RatingControl HorizontalAlignment="Left"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_AuthorsHeader}" Style="{StaticResource HeaderStyle}"/>
                <TextBox 
                    IsEnabled="{x:Bind ViewModel.IsEnabled, Mode=OneWay}" 
                    Text="{x:Bind ViewModel.AuthorTextboxModel.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="{x:Bind ViewModel.AuthorTextboxModel.HasMultipleValues, Mode=OneWay, Converter={StaticResource PlaceholderConverter}}"
                    utils:EnterKeyExtension.Command="{x:Bind ViewModel.AuthorTextboxModel.SignalTypingCompletedCommand}"/>
                <ProgressBar IsIndeterminate="{x:Bind ViewModel.AuthorTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_CopyrightHeader}" Style="{StaticResource HeaderStyle}"/>
                <TextBox 
                    IsEnabled="{x:Bind ViewModel.IsEnabled, Mode=OneWay}" 
                    Text="{x:Bind ViewModel.CopyrightTextboxModel.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="{x:Bind ViewModel.CopyrightTextboxModel.HasMultipleValues, Mode=OneWay, Converter={StaticResource PlaceholderConverter}}"
                    utils:EnterKeyExtension.Command="{x:Bind ViewModel.CopyrightTextboxModel.SignalTypingCompletedCommand}"/>
                <ProgressBar IsIndeterminate="{x:Bind ViewModel.CopyrightTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                <TextBlock Text="{x:Bind res:Strings.MetadataPanel_DateTakenHeader}" Style="{StaticResource HeaderStyle}"/>

            </StackPanel>

        </ScrollViewer>

    </Grid>

</UserControl>
