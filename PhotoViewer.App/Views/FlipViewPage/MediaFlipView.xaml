<UserControl
    x:Class="PhotoViewer.App.Views.MediaFlipView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoViewer.App.Views"    
    xmlns:converters="using:PhotoViewer.App.Converters"
    xmlns:res="using:PhotoViewer.App.Resources"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Storyboard x:Name="DeleteStoryboard">
            <DoubleAnimation 
                From="1" To="0" Duration="0:0:0.2"
                Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                Storyboard.TargetName="flipView" />
        </Storyboard>
    </UserControl.Resources>

    <Grid>
        <FlipView
            x:Name="flipView"
            ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}" 
            SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=OneWay}"
            SelectionChanged="FlipView_SelectionChanged"
            FocusVisualPrimaryThickness="0"
            FocusVisualSecondaryThickness="0"
            CornerRadius="0"
            UseTouchAnimationsForAllNavigation="False"
            ContextRequested="FlipView_ContextRequested"
            Background="{x:Bind ToFlipViewBackground(ViewModel.IsDiashowActive), Mode=OneWay}"
            Tapped="FlipView_Tapped"
            KeyDown="FlipView_KeyDown"
            LosingFocus="FlipView_LosingFocus">
            <FlipView.ItemTemplateSelector>
                <local:MediaFlipViewItemTemplateSelector>
                    <local:MediaFlipViewItemTemplateSelector.BitmapFileInfoTemplate>
                        <DataTemplate>
                            <Border 
                                Loaded="FlipViewItemBorder_Loaded" 
                                DataContextChanged="FlipViewItemBorder_DataContextChanged">
                                <local:BitmapFlipViewItem />
                            </Border>
                        </DataTemplate>
                    </local:MediaFlipViewItemTemplateSelector.BitmapFileInfoTemplate>
                    <local:MediaFlipViewItemTemplateSelector.VectorGraphicFileInfoTemplate>
                        <DataTemplate>
                            <Border 
                                Loaded="FlipViewItemBorder_Loaded"
                                DataContextChanged="FlipViewItemBorder_DataContextChanged">
                                <local:VectorGraphicFlipViewItem  />
                            </Border>
                        </DataTemplate>
                    </local:MediaFlipViewItemTemplateSelector.VectorGraphicFileInfoTemplate>
                    <local:MediaFlipViewItemTemplateSelector.VideoFileInfoTemplate>
                        <DataTemplate>
                            <Border 
                                Loaded="FlipViewItemBorder_Loaded" 
                                DataContextChanged="FlipViewItemBorder_DataContextChanged">
                                <local:VideoFlipViewItem  />
                            </Border>
                        </DataTemplate>
                    </local:MediaFlipViewItemTemplateSelector.VideoFileInfoTemplate>
                </local:MediaFlipViewItemTemplateSelector>
            </FlipView.ItemTemplateSelector>
            <FlipView.Resources>
                <Style TargetType="Button">
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Style>
            </FlipView.Resources>
            <FlyoutBase.AttachedFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem 
                        Icon="{x:Bind ToDiashowLoopMenuItemIcon(ViewModel.IsDiashowLoopActive), Mode=OneWay}" 
                        Text="{x:Bind ToDiashowLoopMenuItemText(ViewModel.IsDiashowLoopActive), Mode=OneWay}" 
                        Command="{x:Bind ViewModel.ToogleDiashowLoopCommand}">
                        <MenuFlyoutItem.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space"/>
                        </MenuFlyoutItem.KeyboardAccelerators>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem 
                        Icon="Cancel" 
                        Text="{x:Bind res:Strings.MediaFlipView_ExitDiashow}" 
                        Command="{x:Bind ViewModel.ExitDiashowCommand}">
                        <MenuFlyoutItem.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Escape"/>
                        </MenuFlyoutItem.KeyboardAccelerators>
                    </MenuFlyoutItem>
                </MenuFlyout>
            </FlyoutBase.AttachedFlyout>
        </FlipView>

        <StackPanel 
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Visibility="{x:Bind ViewModel.ShowNoItemsUI, Mode=OneWay}">
            <TextBlock 
                HorizontalAlignment="Center" 
                Text="{x:Bind res:Strings.NoItemsMessage}"/>
            <Button
                Margin="0,8,0,0"
                HorizontalAlignment="Center" 
                Content="{x:Bind res:Strings.OpenFolderButton}"  
                Command="{x:Bind ViewModel.OpenFolderCommand}"/>
        </StackPanel>

        <StackPanel 
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Visibility="{x:Bind ViewModel.ShowLoadingUI, Mode=OneWay}">
            <TextBlock 
                HorizontalAlignment="Center" 
                Text="{x:Bind res:Strings.LoadingFilesMessage}"/>
            <ProgressRing
                Margin="0,8,0,0"
                HorizontalAlignment="Center"
                IsActive="{x:Bind ViewModel.ShowLoadingUI, Mode=OneWay}"/>
        </StackPanel>

        <InfoBar 
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Margin="12"
            Severity="{x:Bind ViewModel.InfoBarModel.Severity, Mode=OneWay}"
            IsOpen="{x:Bind ViewModel.InfoBarModel.IsOpen, Mode=OneWay}"
            Message="{x:Bind ViewModel.InfoBarModel.Message, Mode=OneWay}"
            LosingFocus="InfoBar_LosingFocus">
            <InfoBar.ActionButton>
                <Button
                    Visibility="{x:Bind ViewModel.InfoBarModel.ShowActionButton, Mode=OneWay}"
                    Content="{x:Bind ViewModel.InfoBarModel.CommandLabel, Mode=OneWay}" 
                    Command="{x:Bind ViewModel.InfoBarModel.Command, Mode=OneWay}"/>
            </InfoBar.ActionButton>
        </InfoBar>

        <Grid
            x:Name="selectedItemIndicator"
            x:Load="False"
            Visibility="{x:Bind ViewModel.ShowSelectedItemIndicator, Mode=OneWay}"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Padding="8"
            Margin="12"
            CornerRadius="4"
            Background="{ThemeResource SystemControlBackgroundAltMediumBrush}">
            <StackPanel
                Orientation="Horizontal"
                Visibility="{x:Bind ViewModel.IsNotLoadingMoreFiles, Mode=OneWay}">
                <TextBlock Text="{x:Bind ViewModel.SelectedItemNumber, Mode=OneWay}"/>
                <TextBlock Text="/" Margin="4,0,4,0"/>
                <TextBlock Text="{x:Bind ViewModel.Items.Count, Mode=OneWay}"/>
            </StackPanel>
            <ProgressRing 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Height="18"
                Width="18"
                IsActive="{x:Bind ViewModel.IsLoadingMoreFiles, Mode=OneWay}"/>
        </Grid>
    </Grid>
</UserControl>
