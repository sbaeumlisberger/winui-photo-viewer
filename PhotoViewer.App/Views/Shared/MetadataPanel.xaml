<UserControl
    x:Class="PhotoViewer.App.Views.MetadataPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoViewer.App.Views"       
    xmlns:viewModels="using:PhotoViewer.Core.ViewModels"
    xmlns:converters="using:PhotoViewer.App.Converters"
    xmlns:controls="using:PhotoViewer.App.Controls"   
    xmlns:utils="using:PhotoViewer.App.Utils"
    xmlns:res="using:PhotoViewer.App.Resources"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="uc">

    <Grid 
        Width="320"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        Visibility="{x:Bind ViewModel.IsVisible, Mode=OneWay}">

        <Grid.Resources>
            <Style x:Key="HeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="Margin"  Value="0,16,0,4" />
            </Style>

            <Style x:Key="LocationTextBoxStyle" TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Height" Value="28"/>
            </Style>

            <Style x:Key="ItemWithCountListView" TargetType="ListView">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="-4,-2.2,-4,-2.2"/>
                            <Setter Property="Padding" Value="12,8,12,8"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="SelectionMode" Value="None"/>
                <Setter Property="MaxHeight"  Value="300"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="{ThemeResource SystemColorHighlightColor}" Opacity="0.4"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemColorHighlightColor}" Opacity="0.6"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemColorHighlightColor}" Opacity="0.8"/>

            <XamlUICommand 
                x:Name="RemovePeopleTagCommand"
                Command="{x:Bind ViewModel.PeopleSectionModel.RemovePeopleTagCommand}"/>
            <XamlUICommand 
                x:Name="RemoveKeywordCommand"
                Command="{x:Bind ViewModel.KeywordsSectionModel.RemoveKeywordCommand}"/>
            <XamlUICommand 
                x:Name="ApplyKeywordToAllCommand"
                Command="{x:Bind ViewModel.KeywordsSectionModel.ApplyKeywordToAllCommand}"/>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <RelativePanel Padding="16,16,8,16">
            <TextBlock
                Style="{StaticResource TitleTextBlockStyle}"
                RelativePanel.AlignVerticalCenterWithPanel="True"
                Text="{x:Bind res:Strings.MetadataPanel_Title}" />
            <Button             
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignVerticalCenterWithPanel="True"
                Padding="4"
                Command="{x:Bind ViewModel.CloseCommand}"  
                ToolTipService.ToolTip="{x:Bind res:Strings.MetadataPanel_CloseButtonToolTip}">
                <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xEA49;" />
            </Button>
        </RelativePanel>

        <Border Grid.Row="1" Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}">
            <ProgressRing
                IsActive="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                HorizontalAlignment="Center" 
                VerticalAlignment="Center"/>
        </Border>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Visibility="{x:Bind ViewModel.IsLoaded, Mode=OneWay}">

            <StackPanel VerticalAlignment="Top" Padding="16,0,16,16">

                <StackPanel Margin="0,16,0,0" Visibility="{x:Bind ViewModel.IsNoFilesSelectedMessageVisible, Mode=OneWay}">
                    <TextBlock                       
                        TextWrapping="WrapWholeWords"
                        Text="{x:Bind res:Strings.MetadataPanel_NoFilesSelected}"/>
                </StackPanel>

                <StackPanel Margin="0,16,0,0" Visibility="{x:Bind ViewModel.IsUnsupportedFilesMessageVisibile, Mode=OneWay}" Spacing="8">
                    <TextBlock                     
                        TextWrapping="WrapWholeWords"
                        Text="{x:Bind res:Strings.MetadataPanel_AnyFileNotSupported}"/>
                    <Button 
                        Visibility="{x:Bind ViewModel.ShowSelectOnlySupportedFilesButton, Mode=OneWay}"
                        Content="{x:Bind res:Strings.MetadataPanel_SelectOnlySupportedFiles}"
                        Command="{x:Bind ViewModel.SelectOnlySupportedFilesCommand}"/>
                </StackPanel>

                <StackPanel Margin="0,16,0,0"  Visibility="{x:Bind ViewModel.IsErrorOccured, Mode=OneWay}">
                    <TextBlock                         
                        TextWrapping="WrapWholeWords"
                        Text="{x:Bind res:Strings.MetadataPanel_LoadingError}"/>
                </StackPanel>

                <StackPanel Visibility="{x:Bind ViewModel.IsInputVisible, Mode=OneWay}">

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_TitleHeader}" Style="{StaticResource HeaderStyle}"/>
                    <TextBox
                        Text="{x:Bind ViewModel.TitleTextboxModel.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PlaceholderText="{x:Bind ResolvePlaceholder(ViewModel.TitleTextboxModel.HasMultipleValues, res:Strings.MetadataPanel_TitlePlaceholder), Mode=OneWay}"
                        utils:EnterKeyExtension.Command="{x:Bind ViewModel.TitleTextboxModel.ConfirmCommand}"/>
                    <ProgressBar IsIndeterminate="{x:Bind ViewModel.TitleTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_LocationHeader}" Style="{StaticResource HeaderStyle}"/>
                    <TextBox Style="{StaticResource LocationTextBoxStyle}" 
                             PlaceholderText="{x:Bind ViewModel.LocationSectionModel.PlaceholderText, Mode=OneWay}"
                             Text="{x:Bind ViewModel.LocationSectionModel.DisplayText, Mode=OneWay}"/>
                    <StackPanel Margin="0,4,0,0" Spacing="4" Orientation="Horizontal">
                        <Button 
                            Content="{x:Bind res:Strings.MetadataPanel_ShowLocationOnMapButton}"
                            Command="{x:Bind ViewModel.LocationSectionModel.ShowLocationOnMapCommand}"/>
                        <SplitButton 
                            Content="{x:Bind res:Strings.MetadataPanel_EditLocationButton}"
                            Command="{x:Bind ViewModel.LocationSectionModel.EditLocationCommand}">
                            <SplitButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem 
                                        Text="{x:Bind res:Strings.MetadataPanel_ImportFromGpxFileButton}"
                                        Command="{x:Bind ViewModel.LocationSectionModel.ImportFromGpxFileCommand}"/>
                                    <MenuFlyoutItem 
                                        Text="{x:Bind res:Strings.MetadataPanel_CopyFormOtherPhotoButton}"
                                        Command="{x:Bind ViewModel.LocationSectionModel.CopyFormOtherPhotoCommand}"/>

                                </MenuFlyout>
                            </SplitButton.Flyout>
                        </SplitButton>
                    </StackPanel>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_PeopleHeader}" Style="{StaticResource HeaderStyle}"/>
                    <ListView
                        ItemsSource="{x:Bind ViewModel.PeopleSectionModel.People, Mode=OneWay}" 
                        Style="{StaticResource ItemWithCountListView}"
                        SelectionMode="Extended"
                        SelectionChanged="PeopleListView_SelectionChanged">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:ItemWithCountModel">
                                <local:ItemWithCount>
                                    <local:ItemWithCount.ContextFlyout>
                                        <MenuFlyout utils:ListViewExtension.AutoSelect="True">
                                            <MenuFlyoutItem
                                               Icon="Delete"
                                               Text="{x:Bind res:Strings.MetadataPanel_RemovePeopleTag}"
                                               Command="{StaticResource RemovePeopleTagCommand}"/>
                                        </MenuFlyout>
                                    </local:ItemWithCount.ContextFlyout>
                                </local:ItemWithCount>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Grid Margin="0,4,0,0" ColumnSpacing="4">
                        <!--ColumnDefinitions="*,Auto"-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <controls:AutoSuggestionBox       
                            x:Name="peopleAutoSuggestBox"
                            Text="{x:Bind ViewModel.PeopleSectionModel.AutoSuggestBoxText, Mode=TwoWay}"                          
                            SuggestionsRequested="PeopleAutoSuggestBox_SuggestionsRequested"
                            PlaceholderText="{x:Bind res:Strings.MetadataPanel_AddPersonPlaceholder}"
                            SubmitCommand="{x:Bind ViewModel.PeopleSectionModel.AddPersonCommand}"/>
                        <ProgressBar 
                            IsIndeterminate="{x:Bind ViewModel.PeopleSectionModel.IsWriting, Mode=OneWay}"
                            VerticalAlignment="Bottom"
                            Background="Transparent"/>
                        <HyperlinkButton
                            Grid.Column="1"
                            Padding="4"
                            VerticalAlignment="Stretch"                            
                            Command="{x:Bind ViewModel.PeopleSectionModel.ManagePeopleSuggestionsCommand}"
                            ToolTipService.ToolTip="{x:Bind res:Strings.MetadataPanel_ManagePeopleSuggestionsButtonTooltip}">
                            <FontIcon FontSize="14" FontFamily="Segoe Fluent Icons" Glyph="&#xE115;" />
                        </HyperlinkButton>
                    </Grid>
                    <StackPanel Margin="0,6,0,0" Orientation="Horizontal" Spacing="4">
                        <ToggleButton
                            Content="{x:Bind res:Strings.MetadataPanel_TagPeopleOnPhoto}"
                            Visibility="{x:Bind ViewModel.PeopleSectionModel.IsTagPeopleOnPhotoButtonVisible}"
                            Command="{x:Bind ViewModel.PeopleSectionModel.ToggleTagPeopleOnPhotoCommand}"                       
                            IsChecked="{x:Bind ViewModel.PeopleSectionModel.IsTagPeopleOnPhotoButtonChecked, Mode=OneWay}"/>
                        <Button
                            Content="{x:Bind res:Strings.MetadataPanel_PeopleTaggingPageButton}"
                            Command="{x:Bind ViewModel.PeopleSectionModel.OpenBatchViewCommand}"/>
                    </StackPanel>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_KeywordsHeader}" Style="{StaticResource HeaderStyle}"/>
                    <ListView 
                        ItemsSource="{x:Bind ViewModel.KeywordsSectionModel.Keywords, Mode=OneWay}" 
                        Style="{StaticResource ItemWithCountListView}">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:ItemWithCountModel">
                                <local:ItemWithCount>
                                    <local:ItemWithCount.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                Icon="Delete"
                                                Text="{x:Bind res:Strings.MetadataPanel_RemoveKeyword}"
                                                Command="{StaticResource RemoveKeywordCommand}"
                                                CommandParameter="{x:Bind Value}"/>
                                            <MenuFlyoutItem
                                                Icon="Add"
                                                Text="{x:Bind res:Strings.MetadataPanel_ApplyKeywordToAll}"
                                                Command="{StaticResource ApplyKeywordToAllCommand}"                                                
                                                CommandParameter="{x:Bind Value}"/>
                                        </MenuFlyout>
                                    </local:ItemWithCount.ContextFlyout>
                                </local:ItemWithCount>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Grid Margin="0,4,0,0" ColumnSpacing="4">
                        <!--ColumnDefinitions="*,Auto"-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <controls:AutoSuggestionBox
                            x:Name="keywordAutoSuggestBox"
                            Text="{x:Bind ViewModel.KeywordsSectionModel.AutoSuggestBoxText, Mode=TwoWay}"
                            SuggestionsRequested="KeywordAutoSuggestBox_SuggestionsRequested"
                            PlaceholderText="{x:Bind res:Strings.MetadataPanel_AddKeywordPlaceholder}"
                            SubmitCommand="{x:Bind ViewModel.KeywordsSectionModel.AddKeywordCommand}"/>
                        <ProgressBar 
                            IsIndeterminate="{x:Bind ViewModel.KeywordsSectionModel.IsWriting, Mode=OneWay}"
                            VerticalAlignment="Bottom"
                            Background="Transparent"/>
                        <HyperlinkButton
                            Grid.Column="1"
                            Padding="4"
                            VerticalAlignment="Stretch"                          
                            Command="{x:Bind ViewModel.KeywordsSectionModel.ManageKeywordsSuggestionsCommand}"
                            ToolTipService.ToolTip="{x:Bind res:Strings.MetadataPanel_ManageKeywordSuggestionsButtonTooltip}">
                            <FontIcon FontSize="14" FontFamily="Segoe Fluent Icons" Glyph="&#xE115;" />
                        </HyperlinkButton>
                    </Grid>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_RatingHeader}" Style="{StaticResource HeaderStyle}"/>
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <controls:RatingControl
                            HorizontalAlignment="Left"
                            Rating="{x:Bind ViewModel.RatingSectionModel.Rating, Mode=TwoWay}"/>
                        <ProgressRing Width="24" Height="24" IsActive="{x:Bind ViewModel.RatingSectionModel.IsWriting, Mode=OneWay}"/>
                    </StackPanel>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_AuthorsHeader}" Style="{StaticResource HeaderStyle}"/>
                    <TextBox
                        Text="{x:Bind ViewModel.AuthorTextboxModel.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PlaceholderText="{x:Bind ResolvePlaceholder(ViewModel.TitleTextboxModel.HasMultipleValues, res:Strings.MetadataPanel_AuthorPlaceholder), Mode=OneWay}"     
                        utils:EnterKeyExtension.Command="{x:Bind ViewModel.AuthorTextboxModel.ConfirmCommand}"/>
                    <ProgressBar IsIndeterminate="{x:Bind ViewModel.AuthorTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_CopyrightHeader}" Style="{StaticResource HeaderStyle}"/>
                    <TextBox
                        Text="{x:Bind ViewModel.CopyrightTextboxModel.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PlaceholderText="{x:Bind ResolvePlaceholder(ViewModel.CopyrightTextboxModel.HasMultipleValues, res:Strings.MetadataPanel_CopyrightPlaceholder), Mode=OneWay}"
                        utils:EnterKeyExtension.Command="{x:Bind ViewModel.CopyrightTextboxModel.ConfirmCommand}"/>
                    <ProgressBar IsIndeterminate="{x:Bind ViewModel.CopyrightTextboxModel.IsWriting, Mode=OneWay}" Background="Transparent"/>

                    <TextBlock Text="{x:Bind res:Strings.MetadataPanel_DateTakenHeader}" Style="{StaticResource HeaderStyle}"/>
                    <StackPanel
                        Spacing="4"
                        Visibility="{x:Bind ViewModel.DateTakenSectionModel.IsSingleValue, Mode=OneWay}">
                        <DatePicker
                            SelectedDate="{x:Bind ViewModel.DateTakenSectionModel.Date, Mode=TwoWay}"/>
                        <controls:TimePickerControl
                            Time="{x:Bind ViewModel.DateTakenSectionModel.Time, Mode=TwoWay}"/>
                        <ProgressBar 
                            IsIndeterminate="{x:Bind ViewModel.DateTakenSectionModel.IsWriting, Mode=OneWay}"
                            Background="Transparent"/>
                    </StackPanel>
                    <StackPanel 
                        Spacing="4"
                        Visibility="{x:Bind ViewModel.DateTakenSectionModel.IsNotPresent, Mode=OneWay}">
                        <TextBlock                      
                            Text="{x:Bind res:Strings.MetadataPanel_NoDateTakenPresent}"/>
                        <Button
                            Content="{x:Bind res:Strings.MetadataPanel_AddDateTakenButton}"
                            Command="{x:Bind ViewModel.DateTakenSectionModel.AddDateTakenCommand}"/>
                    </StackPanel>
                    <StackPanel
                        Spacing="4"
                        Visibility="{x:Bind ViewModel.DateTakenSectionModel.IsRange, Mode=OneWay}">
                        <TextBlock
                            Text="{x:Bind ViewModel.DateTakenSectionModel.RangeText, Mode=OneWay}"/>
                        <Button
                            Content="{x:Bind res:Strings.MetadataPanel_ShiftDateTakenButton}"
                            Command="{x:Bind ViewModel.DateTakenSectionModel.ShiftDateTakenCommand}"/>
                    </StackPanel>
                </StackPanel>

            </StackPanel>

        </ScrollViewer>

    </Grid>

</UserControl>
